plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

def keystorePropertiesFile = rootProject.file("signing-keys.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.afrosin.filmsearch"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "androidx.appcompat") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "1.+"
                }
            }
        }
        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
        }
    }

    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("api-keys.properties").newDataInputStream())
        def filmApiKey = properties.getProperty("filmApiKey", "")
        it.buildConfigField "String", "FILM_API_KEY", filmApiKey

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    //Room
    implementation "androidx.room:room-runtime:2.3.0"
    implementation "androidx.room:room-ktx:2.3.0"
    implementation "androidx.room:room-rxjava3:2.3.0"
    kapt("androidx.room:room-compiler:2.3.0")

    // Moxy
    implementation "com.github.moxy-community:moxy:2.2.2"
    kapt "com.github.moxy-community:moxy-compiler:2.2.2"
    implementation "com.github.moxy-community:moxy-ktx:2.2.2"
    implementation "com.github.moxy-community:moxy-androidx:2.2.2"

    // Cicirone
    implementation 'com.github.terrakok:cicerone:7.0'

    // rxjava
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    implementation('io.reactivex.rxjava3:rxkotlin:3.0.0')

    // view binding
    implementation 'com.github.kirich1409:viewbindingpropertydelegate:1.4.6'

    // dagger
    implementation 'com.google.dagger:dagger:2.35.1'
    kapt 'com.google.dagger:dagger-compiler:2.35.1'
    implementation 'com.google.dagger:dagger-android:2.35.1'
    kapt "com.google.dagger:dagger-android-processor:2.35.1"
    implementation 'com.google.dagger:dagger-android-support:2.35.1'

    // mockito
    testImplementation "org.mockito:mockito-core:2.19.0"
    testImplementation 'org.mockito:mockito-inline:2.8.9'
    testImplementation('com.nhaarman:mockito-kotlin:1.5.0') {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }


}